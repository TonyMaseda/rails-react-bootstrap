<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: "form-signin" }) do |f| %>
  <%= render "devise/shared/error_messages", resource: resource %>

  <div class="text-center mb-4">
    <%= link_to root_path, data: { turbo: false } do %>
      <%= image_tag 'logo.png', alt: 'Logo', class: 'logo' %>
    <% end %>
    <h1 class="h3 mb-3 fw-normal"><%= link_to current_user.name, current_user, class: 'text-info' %> <%#= resource_name.to_s.humanize %></h1>
  </div><!-- .text-center .mb-4 -->

  <div class="form-check form-switch text-start my-4">
    <%= f.check_box :dark_theme, class: "form-check-input ms-0 theme-toggle", role: 'switch', data: {'user-id': current_user.id} %>
    <small class="form-check-label ms-2 text-secondary" for="inputTheme">Dark Theme</small>
  </div><!-- .form-check .form-switch -->

  <div class="form-floating mb-5">
    <p class="mb-0 ms-3 small text-secondary">Timezone</p>
    <%= f.select :timezone, timezone_options, { include_blank: false }, { class: 'form-select' } %>
  </div><!-- .form-floating -->

  <div class="form-floating">
    <%= f.email_field :email, id: "inputEmail", class: "form-control", placeholder: "Email address", autofocus: false %>
    <label for="inputEmail">Email address</label>
  </div><!-- .form-floating -->

  <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
    <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
  <% end %>

  <div class="form-floating">
    <%= f.password_field :password, id: "inputPassword", class: "form-control", placeholder: "Password (6 characters minimum)" %>
    <label for="inputPassword">Password</label>
  </div><!-- .form-floating -->

  <div class="form-floating">
    <%= f.password_field :password_confirmation, id: "inputPasswordConfirmation", class: "form-control", placeholder: "Password Confirmation" %>
    <label for="inputPasswordConfirmation">Password confirmation</label>
  </div><!-- .form-floating -->

  <div class="form-floating">
    <%= f.password_field :current_password, autocomplete: "current-password", id: "inputCurrentPassword", class: "form-control", placeholder: "Password (6 characters minimum)" %>
    <label for="inputCurrentPassword">Current Password</label>
  </div><!-- .form-floating -->

  <%= f.submit "Update", class: "mb-3 w-100 btn btn-lg btn-info text-light" %>

  <button type="button" class="mb-3 w-100 btn btn-lg btn-outline-secondary mt-5" data-bs-toggle="modal" data-bs-target="#goodbyeModal">Delete Account</button>

<% end %>

<div class="modal fade text-start" id="goodbyeModal" tabindex="-1" role="dialog" aria-labelledby="goodbyeModal" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title text-danger" id="goodbyeModalLabel">
          Delete Account
        </h3>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="modal" aria-label="Close"></button>
      </div><!-- .modal-header -->
      <div class="modal-body">
        <div class="my-3 p-3 bg-white shadow-lg">
          <p class="pb-1 mt-1">
            Are you sure you want to delete your account?
            <strong>Your Todo List, Blog, and WebRTC activity will also be deleted</strong>.
          </p>
        </div><!-- .my-3 .p-3 .bg-white .shadow-sm -->
      </div><!-- .modal-body -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <%= link_to(registration_path(resource_name), class:'btn btn-danger', data: { confirm: "Confirm Account Deletion" }, method: :delete) do %>
          Delete Acount
        <% end %>
      </div><!-- .modal-footer -->
    </div><!-- .modal-content -->
  </div><!-- .modal-dialog -->
</div><!-- .modal -->

<!-- Theme Toggle: devise-dark-mode -->
<script>
  // console.log(document.cookie);
  var element = document.body;

  // Set Cookie
  function setCookie(name,value,days) {
    if (days) {
      var date = new Date();
      date.setTime(date.getTime()+(days*24*60*60*1000));
      var expires = "; expires="+date.toGMTString();
    }
    else var expires = "";
    document.cookie = name+"="+value+expires+"; path=/";
  }
  // Get Cookie
  function getCookie(key) {
    var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
    return keyValue ? keyValue[2] : null;
    console.log(getCookie('theme'));
  }
  // PUT toggle current_user dark_theme boolean
  function toggleField() {
    const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");
    fetch('/users/' + document.querySelector('.theme-toggle').getAttribute('data-user-id') + '/toggle_theme', {
      method: 'PUT',
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
        'X-CSRF-Token': csrf
      },
    });
  }
  // Page Load
  if (getCookie('theme') == 2) {
    setCookie('theme','2', '30');
    document.querySelector('.theme-toggle').checked = true;
    element.classList.add("dark-mode");
  } else { // == 1 OR null
    document.querySelector('.theme-toggle').checked = false;
  }
  // Toggle Theme
  document.querySelector(".theme-toggle").addEventListener('change', (e) => {
    if (document.querySelector('.theme-toggle').checked == false) {
      setCookie('theme','1', '30');
      element.classList.remove("devise-dark-mode");
      toggleField();
      // console.log('light(1) --  ' + getCookie('theme'));
    } else {
      setCookie('theme','2', '30');
      element.classList.add("devise-dark-mode");
      toggleField();
      // console.log('dark(2) -- ' + getCookie('theme'));
    }
  });
</script>
